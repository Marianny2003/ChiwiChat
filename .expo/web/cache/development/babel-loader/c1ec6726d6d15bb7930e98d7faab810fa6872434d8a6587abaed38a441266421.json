{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nexport var useValidarVacioNombre = function useValidarVacioNombre() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    error = _useState2[0],\n    setError = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    nombre = _useState4[0],\n    setNombre = _useState4[1];\n  var validar = function validar() {\n    if (!nombre || nombre.trim() === \"\") {\n      setError(\"El campo no puede estar vacío!\");\n    } else {\n      setError(null);\n    }\n  };\n  var resetErrorNombre = function resetErrorNombre() {\n    setError(\"\");\n  };\n  return [nombre, setNombre, error, validar, resetErrorNombre];\n};\nexport var useValidarVacioApellido = function useValidarVacioApellido() {\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    apellido = _useState8[0],\n    setApellido = _useState8[1];\n  var validar = function validar() {\n    if (!apellido || apellido.trim() === \"\") {\n      setError(\"El campo no puede estar vacío!\");\n    } else {\n      setError(null);\n    }\n  };\n  var resetErrorApellido = function resetErrorApellido() {\n    setError(\"\");\n  };\n  return [apellido, setApellido, error, validar, resetErrorApellido];\n};\nexport var useValidarEmail = function useValidarEmail() {\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    error = _useState10[0],\n    setError = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    email = _useState12[0],\n    setEmail = _useState12[1];\n  var validar = function validar() {\n    if (!email || email.trim() === \"\") {\n      setError(\"El correo electrónico no puede estar vacío!\");\n    } else {\n      var regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n      if (!regex.test(email)) {\n        setError(\"El formato del correo electrónico es incorrecto!\");\n      } else {\n        setError(null);\n      }\n    }\n  };\n  var resetErrorEmail = function resetErrorEmail() {\n    setError(\"\");\n  };\n  return [email, setEmail, error, validar, resetErrorEmail];\n};\nexport var useValidarUsuario = function useValidarUsuario() {\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    error = _useState14[0],\n    setError = _useState14[1];\n  var _useState15 = useState(\"\"),\n    _useState16 = _slicedToArray(_useState15, 2),\n    usuario = _useState16[0],\n    setUsuario = _useState16[1];\n  var validar = function validar() {\n    if (!usuario || usuario.trim() === \"\") {\n      setError(\"El usuario no puede estar vacío!\");\n    } else if (!/^\\d{7,8}$/.test(usuario)) {\n      setError(\"El usuario debe tener entre 7 y 8 dígitos!\");\n    } else {\n      setError(null);\n    }\n  };\n  var resetErrorUsuario = function resetErrorUsuario() {\n    setError(\"\");\n  };\n  return [usuario, setUsuario, error, validar, resetErrorUsuario];\n};\nexport var useValidarContrasena = function useValidarContrasena() {\n  var _useState17 = useState(null),\n    _useState18 = _slicedToArray(_useState17, 2),\n    error = _useState18[0],\n    setError = _useState18[1];\n  var _useState19 = useState(\"\"),\n    _useState20 = _slicedToArray(_useState19, 2),\n    contrasena = _useState20[0],\n    setContrasena = _useState20[1];\n  var validar = function validar() {\n    if (!contrasena || contrasena.trim() === \"\") {\n      setError(\"La contraseña no puede estar vacía!\");\n    } else {\n      var regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\*\\-_\\.\\;\\,\\(\\)\\\"@#\\$=])[A-Za-z\\d\\*\\-_\\.\\;\\,\\(\\)\\\"@#\\$=]{8,12}$/;\n      if (!regex.test(contrasena)) {\n        setError(\"La contraseña debe tener al menos 8 caracteres, incluyendo una letra mayúscula, un número y un carácter especial!\");\n      } else {\n        setError('');\n      }\n    }\n  };\n  var resetErrorContrasenia = function resetErrorContrasenia() {\n    setError(\"\");\n  };\n  return [contrasena, setContrasena, error, validar, resetErrorContrasenia];\n};\nexport var useValidarLasContrasenas = function useValidarLasContrasenas() {\n  var _useState21 = useState(''),\n    _useState22 = _slicedToArray(_useState21, 2),\n    contrasena1 = _useState22[0],\n    setContrasena1 = _useState22[1];\n  var _useState23 = useState(''),\n    _useState24 = _slicedToArray(_useState23, 2),\n    contrasena2 = _useState24[0],\n    setContrasena2 = _useState24[1];\n  var _useState25 = useState(null),\n    _useState26 = _slicedToArray(_useState25, 2),\n    error = _useState26[0],\n    setError = _useState26[1];\n  var validar = function validar() {\n    if (!contrasena1 || contrasena1.trim() === \"\") {\n      setError(\"La primera contraseña no puede estar vacía!\");\n      return;\n    } else {\n      setError('');\n    }\n    if (!contrasena2 || contrasena2.trim() === \"\") {\n      setError(\"La segunda contraseña no puede estar vacía!\");\n      return;\n    } else {\n      setError('');\n    }\n    if (contrasena1.length < 8) {\n      setError(\"Las contraseñas deben tener al menos 8 caracteres!\");\n      return;\n    } else {\n      setError('');\n    }\n    var tieneMayuscula = /[A-Z]/.test(contrasena1);\n    var tieneNumero = /\\d/.test(contrasena1);\n    var tieneCaracterEspecial = /[!@#$%^&*(),.?\":{}|<>]/.test(contrasena1);\n    if (!tieneMayuscula || !tieneNumero || !tieneCaracterEspecial) {\n      setError(\"La contraseña debe contener al menos una letra mayúscula, un número y un carácter especial!\");\n      return;\n    } else {\n      setError('');\n    }\n    if (contrasena1 !== contrasena2) {\n      setError(\"Las contraseñas no coinciden!\");\n      return;\n    } else {\n      setError('');\n    }\n  };\n  var resetErrorContrasenias = function resetErrorContrasenias() {\n    setError(\"\");\n  };\n  return [contrasena1, setContrasena1, contrasena2, setContrasena2, error, validar, resetErrorContrasenias];\n};","map":{"version":3,"names":["useState","useValidarVacioNombre","_useState","_useState2","_slicedToArray","error","setError","_useState3","_useState4","nombre","setNombre","validar","trim","resetErrorNombre","useValidarVacioApellido","_useState5","_useState6","_useState7","_useState8","apellido","setApellido","resetErrorApellido","useValidarEmail","_useState9","_useState10","_useState11","_useState12","email","setEmail","regex","test","resetErrorEmail","useValidarUsuario","_useState13","_useState14","_useState15","_useState16","usuario","setUsuario","resetErrorUsuario","useValidarContrasena","_useState17","_useState18","_useState19","_useState20","contrasena","setContrasena","resetErrorContrasenia","useValidarLasContrasenas","_useState21","_useState22","contrasena1","setContrasena1","_useState23","_useState24","contrasena2","setContrasena2","_useState25","_useState26","length","tieneMayuscula","tieneNumero","tieneCaracterEspecial","resetErrorContrasenias"],"sources":["C:/Mis documentos/Escritorio/ChiwiChat/hooks/useValidacion.js"],"sourcesContent":["import { useState } from \"react\";\n\nexport const useValidarVacioNombre = () => {\n  const [error, setError] = useState(null);\n  const [nombre, setNombre] = useState('');\n  const validar = () => {\n    if (!nombre || nombre.trim() === \"\") {\n      setError(\"El campo no puede estar vacío!\");\n    } else {\n      setError(null);\n    }\n  };\n\n  const resetErrorNombre =()=>{\n    setError(\"\");\n  };\n\n  return [nombre, setNombre, error, validar, resetErrorNombre];\n};\n\nexport const useValidarVacioApellido = () => {\n  const [error, setError] = useState(null);\n  const [apellido, setApellido] = useState('');\n  const validar = () => {\n    if (!apellido || apellido.trim() === \"\") {\n      setError(\"El campo no puede estar vacío!\");\n    } else {\n      setError(null);\n    }\n  };\n\n  const resetErrorApellido =()=>{\n    setError(\"\");\n  };\n\n  return [apellido, setApellido, error, validar, resetErrorApellido];\n};\n\n\nexport const useValidarEmail = () => {\n  const [error, setError] = useState(null);\n  const [email, setEmail] = useState(\"\");\n\n  const validar = () => {\n    if (!email || email.trim() === \"\") {\n      setError(\"El correo electrónico no puede estar vacío!\");\n    } else {\n      const regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n      if (!regex.test(email)) {\n        setError(\"El formato del correo electrónico es incorrecto!\");\n      } else {\n        setError(null);\n      }\n    }\n  };\n\n  const resetErrorEmail =()=>{\n    setError(\"\");\n  };\n\n  return [email, setEmail, error, validar, resetErrorEmail];\n};\n\n\nexport const useValidarUsuario = () => {\n  const [error, setError] = useState(null);\n  const [usuario, setUsuario] = useState(\"\");\n\n  const validar = () => {\n    if (!usuario || usuario.trim() === \"\") {\n      setError(\"El usuario no puede estar vacío!\");\n    } else if (!/^\\d{7,8}$/.test(usuario)) {\n      setError(\"El usuario debe tener entre 7 y 8 dígitos!\");\n    } else {\n      setError(null);\n    }\n  };\n\n  const resetErrorUsuario =()=>{\n    setError(\"\");\n  };\n\n  return [usuario, setUsuario, error, validar, resetErrorUsuario];\n};\n\nexport const useValidarContrasena = () => {\n  const [error, setError] = useState(null);\n  const [contrasena, setContrasena] = useState(\"\");\n\n  const validar = () => {\n    if (!contrasena || contrasena.trim() === \"\") {\n      setError(\"La contraseña no puede estar vacía!\");\n    } else {\n      const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\*\\-_\\.\\;\\,\\(\\)\\\"@#\\$=])[A-Za-z\\d\\*\\-_\\.\\;\\,\\(\\)\\\"@#\\$=]{8,12}$/;\n      if (!regex.test(contrasena)) {\n        setError(\n          \"La contraseña debe tener al menos 8 caracteres, incluyendo una letra mayúscula, un número y un carácter especial!\"\n        );\n      } else {\n        setError('');\n      }\n    }\n  };\n\n  const resetErrorContrasenia =()=>{\n    setError(\"\");\n  };\n\n  return [contrasena, setContrasena, error, validar, resetErrorContrasenia];\n};\n\nexport const useValidarLasContrasenas = () => {\n  const [contrasena1, setContrasena1] = useState('');\n  const [contrasena2, setContrasena2] = useState('');\n  const [error, setError] = useState(null);\n\n  const validar = () => {\n    if (!contrasena1 || contrasena1.trim() === \"\") {\n      setError(\"La primera contraseña no puede estar vacía!\");\n      return;\n    }\n    else{\n      setError('');\n    }\n    \n    if (!contrasena2 || contrasena2.trim() === \"\") {\n      setError(\"La segunda contraseña no puede estar vacía!\");\n      return;\n    }\n    else{\n      setError('');\n    }\n\n    if (contrasena1.length < 8) {\n      setError(\"Las contraseñas deben tener al menos 8 caracteres!\");\n      return;\n    }\n    else{\n      setError('');\n    }\n\n    const tieneMayuscula = /[A-Z]/.test(contrasena1);\n    const tieneNumero = /\\d/.test(contrasena1);\n    const tieneCaracterEspecial = /[!@#$%^&*(),.?\":{}|<>]/.test(contrasena1);\n\n    if (!tieneMayuscula || !tieneNumero || !tieneCaracterEspecial) {\n      setError(\"La contraseña debe contener al menos una letra mayúscula, un número y un carácter especial!\");\n      return;\n    }\n    else{\n      setError('');\n    }\n\n    if (contrasena1 !== contrasena2) {\n      setError(\"Las contraseñas no coinciden!\");\n      return;\n    }\n    else{\n      setError('');\n    }\n\n    \n  };\n\n  const resetErrorContrasenias =()=>{\n    setError(\"\");\n  };\n\n  return [contrasena1, setContrasena1, contrasena2, setContrasena2, error, validar, resetErrorContrasenias];\n};\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}